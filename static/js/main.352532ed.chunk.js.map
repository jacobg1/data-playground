{"version":3,"sources":["images/loading.svg","actions/index.js","styles/breakpoints.js","actions/stockActions.js","components/stockGraph/Legend.js","components/stockGraph/PriceDataLine.js","components/stockGraph/StockLabels.js","components/stockGraph/Tooltip.js","components/stockGraph/PriceGraph.js","components/stockGraph/PriceLineFilter.js","containers/stocks/LineFilter.js","styles/customStyles.js","components/stockGraph/StockSymbolList.js","components/stockGraph/SymbolListFilter.js","components/stockGraph/Stocks.js","containers/stocks/StocksContainer.js","components/Filter.js","containers/FilterCharts.js","actions/cryptoActions.js","components/cryptoGraphs/CryptoLineFilter.js","containers/cryptoCurrency/CryptoFilter.js","components/cryptoGraphs/CryptoList.js","components/cryptoGraphs/CryptoTypeFilter.js","components/cryptoGraphs/Crypto.js","containers/cryptoCurrency/CryptoContainer.js","components/Charts.js","serviceWorker.js","reducers/chartFilters.js","reducers/stocksReducer.js","reducers/stockLines.js","reducers/cryptoReducer.js","reducers/cryptoLines.js","reducers/stockSymbol.js","reducers/cryptoCoin.js","reducers/listFilters.js","reducers/cryptoType.js","reducers/filterLoadingState.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","ChartFilters","setFilterLoadingState","type","breakpoints","handleFetchErrors","response","ok","Error","statusText","GET_PRICES_BEGIN","GET_PRICES_SUCCESS","GET_PRICES_FAILURE","getPricesBegin","getPricesSuccess","prices","meta","payload","getPricesFailure","error","StockLines","ListFilters","setListFilter","filter","Legend","_ref","stocklines","react_default","a","createElement","className","high","Fragment","low","open","close","priceLine","css","_templateObject","PriceDataLine","d3","raise","_this$props","this","props","margin","h","w","stroke","hover","setHover","clearHover","allPriceData","lineType","x","domain","d","date","range","y","Math","max","line","hoverDots","map","price","i","Object","core_browser_esm","onMouseMove","e","key","onMouseLeave","fill","cx","cy","r","data-date","data-value","data-color","id","PureComponent","axisLabels","StockLabels_templateObject","StockLabels","yLabels","ticks","transform","concat","x1","x2","y1","y2","xLabels","Date","getFullYear","formatXLabels","hoverHolder","Tooltip_templateObject","Tooltip","value","positionX","positionY","color","style","top","left","backgroundColor","parseFloat","toFixed","getMonth","getDate","formatDate","axis","PriceGraph_templateObject","svgHolder","_templateObject2","PriceGraph","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","width","height","bind","assertThisInitialized","setState","target","getAttribute","pageX","pageY","crypto","keys","forEach","index","timeStamp","push","Number","formatAllData","_this$props2","_this$props3","stockLines","_this$state","stockGraph_Tooltip","length","stockGraph_PriceDataLine","stockGraph_StockLabels","filterBoxes","PriceLineFilter_templateObject","PriceLineFilter","children","onChange","checked","connect","ownProps","dispatch","customStyles","control","base","objectSpread","background","borderRadius","isFocused","boxSizing","borderColor","boxShadow","cursor","&:hover","dropdownIndicator","transition","selectProps","menuIsOpen","menu","hyphens","marginTop","textAlign","wordWrap","menuList","padding","option","provided","borderBottom","isSelected","opacity","&:focus",":active","selectHolder","StockSymbolList_templateObject","stockSymbol","loading","filterLoadingState","opt","symbol","label","options","react_select_esm","cacheOptions","classNamePrefix","defaultValue","isSearchable","styles","ignoreAccents","isLoading","button","SymbolListFilter_templateObject","active","listFilters","onClick","setTimeout","dispatchAndChangeLoadingState","stockHeader","Stocks_templateObject","flex","Stocks_templateObject2","metaText","_templateObject3","lineFilters","_templateObject4","spinner","_templateObject5","fetchError","_templateObject6","stockFilter","_templateObject7","loadingHolder","_templateObject8","buttonFlex","_templateObject9","_templateObject10","_templateObject11","Stocks","updateGraphSize","windowWidth","window","innerWidth","newWidth","newHeight","round","addEventListener","removeEventListener","alt","src","loadingSpinner","url","process","fetch","then","json","catch","getPrices","stockGraph_SymbolListFilter","stockGraph_StockSymbolList","listOfStockSymbols","NASDAQStockSymbols","stockGraph_Legend","LineFilter","stockGraph_PriceGraph","Component","stocks","Filter_templateObject","Filter","chartFilters","GET_CRYPTO_BEGIN","GET_CRYPTO_SUCCESS","GET_CRYPTO_FAILURE","getCryptoBegin","getCryptoSuccess","getCryptoFailure","CryptoLines","TypeFilters","CryptoLineFilter_templateObject","CryptoLineFilter","cryptoLines","CryptoList_templateObject","cryotoCoin","cryptoCoin","coin","coinTypes","CryptoTypeFilter_templateObject","timePeriod","cryptoType","Crypto_templateObject","Crypto_templateObject2","Crypto_templateObject3","Crypto_templateObject4","Crypto_templateObject5","Crypto_templateObject6","Crypto_templateObject7","Crypto_templateObject8","Crypto_templateObject9","Crypto_templateObject10","cryptoFilter","Crypto_templateObject11","Crypto","cryptoPrices","market","getCrypto","cryptoGraphs_CryptoTypeFilter","cryptoGraphs_CryptoList","CryptoFilter","Charts_templateObject","title","Charts_templateObject2","ChartsContainer","chartsToShow","FilterCharts","StocksContainer","CryptoContainer","Boolean","location","hostname","match","arguments","undefined","action","initialState","stocksReducer","defineProperty","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","render","es","components_Charts","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.352532ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.4458856a.svg\";","// setting the filter\nexport const setChartFilter = filter => ({\n  type: 'SET_CHART_FILTER',\n  filter\n})\n\n// action types for filtering between views\nexport const ChartFilters = {\n  SHOW_PIE_CHARTS: 'SHOW_PIE_CHARTS',\n  SHOW_LINE_GRAPHS: 'SHOW_LINE_GRAPHS',\n  SHOW_STOCK_PRICES: 'SHOW_STOCK_PRICES',\n  SHOW_CRYPTO_PRICES: 'SHOW_CRYPTO_PRICES'\n}\n\n/* \n\tsimulate loading on select options to give \n\tusers feedback that the list has changed \n*/\n\nexport const setFilterLoadingState = () => ({\n  type: 'SET_FILTER_LOADING_STATE'\n})\n","export const breakpoints = {\n  header: `(min-width: 325px)`,\n  mobile: `(min-width: 575px)`,\n  footer: `(min-width: 560px)`,\n  specialHeader: `(min-width: 700px)`,\n  tablet: `(min-width: 768px)`,\n  laptop: `(min-width: 1124px)`,\n  desktop: `(min-width: 1440px)`\n}\n","/* \n\tfunction which fetches the stock data from the api\n*/\n\nexport function getPrices(symbol, type) {\n  const key = process.env.REACT_APP_API_KEY,\n    url = `https://www.alphavantage.co/query?function=${type}&symbol=${symbol}&apikey=${key}`\n  return dispatch => {\n    dispatch(getPricesBegin())\n    return fetch(url)\n      .then(handleFetchErrors)\n      .then(response => response.json())\n      .then(json => {\n        // console.log(json)\n        if (!json[Object.keys(json)[1]]) {\n          dispatch(getPricesFailure(json[Object.keys(json)[0]]))\n        }\n        dispatch(\n          getPricesSuccess(\n            json[Object.keys(json)[1]],\n            json[Object.keys(json)[0]]\n          )\n        )\n        return json\n      })\n      .catch(error => dispatch(getPricesFailure(error)))\n  }\n}\n\n// function to handle http errors\nfunction handleFetchErrors(response) {\n  // console.log(response)\n  if (!response.ok) {\n    throw Error(response.statusText)\n  }\n  return response\n}\n\n/*\n\tcreating action types for:\n\t  - starting the request\n\t\t- when the request is successful\n\t\t- if the request fails\n*/\n\nexport const GET_PRICES_BEGIN = 'GET_PRICES_BEGIN'\nexport const GET_PRICES_SUCCESS = 'GET_PRICES_SUCCESS'\nexport const GET_PRICES_FAILURE = 'GET_PRICES_FAILURE'\n\nexport const getPricesBegin = () => ({\n  type: GET_PRICES_BEGIN\n})\n\nexport const getPricesSuccess = (prices, meta) => ({\n  type: GET_PRICES_SUCCESS,\n  payload: { prices, meta }\n})\n\nexport const getPricesFailure = error => ({\n  type: GET_PRICES_FAILURE,\n  payload: { error }\n})\n\n// setting which pice line to show on stock chart\nexport const setStockLines = filter => ({\n  type: 'SET_PRICE_LINE',\n  filter\n})\n\n// action types for filtering between stock price lines\nexport const StockLines = {\n  OPEN: 'open',\n  HIGH: 'high',\n  LOW: 'low',\n  CLOSE: 'close'\n}\n\n// action type for setting that stock symbol that will be used in search\nexport const setStockSymbol = (symbol, label) => ({\n  type: 'SET_STOCK_SYMBOL',\n  symbol,\n  label\n})\n\nexport const ListFilters = {\n  SHOW_NYSE: 'SHOW_NYSE',\n  SHOW_NASDAQ: 'SHOW_NASDAQ'\n}\n\n// setting the filter\nexport const setListFilter = filter => ({\n  type: 'SET_LIST_FILTER',\n  filter\n})\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\n// buttons for filtering between charts\nconst Legend = ({ stocklines }) => {\n  const { type } = stocklines\n  // console.log(type)\n  return (\n    <div className=\"legend\">\n      {type.high && (\n        <>\n          <div className=\"high\" />\n          <span> - high</span>\n        </>\n      )}\n      {type.low && (\n        <>\n          <div className=\"low\" />\n          <span> - low</span>\n        </>\n      )}\n      {type.open && (\n        <>\n          <div className=\"open\" />\n          <span> - open</span>\n        </>\n      )}\n      {type.close && (\n        <>\n          <div className=\"close\" />\n          <span> - close</span>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Legend\n\nLegend.propTypes = {\n  stocklines: PropTypes.object.isRequired\n}\n","// eslint-disable-next-line no-unused-vars\nimport React, { PureComponent } from 'react'\nimport * as d3 from 'd3'\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nconst priceLine = css`\n  stroke-width: 3px;\n  fill: none;\n`\n\nclass PriceDataLine extends PureComponent {\n  componentDidMount() {\n    d3.select('#hover').raise()\n  }\n  render() {\n    const {\n      margin,\n      h,\n      w,\n      stroke,\n      hover,\n      setHover,\n      clearHover,\n      allPriceData,\n      lineType\n    } = this.props\n\n    // scale x axis to fit data\n    const x = d3\n      .scaleTime()\n      .domain(d3.extent(allPriceData, d => d.date))\n      .range([margin, w])\n\n    // scale y axis to fit data\n    const y = d3\n      .scaleLinear()\n      .domain([\n        0,\n        d3.max(allPriceData, d => Math.max(d.low, d.open, d.high, d.close))\n      ])\n      .range([h, margin])\n\n    // use d3 to create function that will calculate the line\n    // that connects the data points\n    const line = d3\n      .line()\n      .x(d => x(d.date))\n      .y(d => y(d[lineType]))\n\n    const hoverDots = allPriceData.map((price, i) =>\n      hover ? (\n        <circle\n          onMouseMove={e => setHover(e)}\n          key={i}\n          onMouseLeave={() => clearHover()}\n          fill={stroke}\n          cx={x(price.date)}\n          cy={y(price[lineType])}\n          r={8}\n          data-date={price.date}\n          data-value={price[lineType]}\n          data-color={stroke}\n        />\n      ) : null\n    )\n\n    return (\n      <>\n        <g id=\"hover\">{hoverDots}</g>\n        <path css={priceLine} stroke={stroke} d={line(allPriceData)} />\n      </>\n    )\n  }\n}\n\nexport default PriceDataLine\n","// eslint-disable-next-line no-unused-vars\nimport React, { PureComponent } from 'react'\nimport * as d3 from 'd3'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nconst axisLabels = css`\n  text {\n    fill: #a8a8ff;\n    font-size: 9px;\n    text-anchor: middle;\n  }\n  line {\n    stroke: #d6d6d8;\n  }\n`\nclass StockLabels extends PureComponent {\n  render() {\n    const { margin, h, w, allPriceData } = this.props\n\n    // scale x axis to fit data\n    const x = d3\n      .scaleLinear()\n      .domain(d3.extent(allPriceData, d => d.date))\n      .range([margin, w])\n\n    // scale y axis to fit data\n    const y = d3\n      .scaleLinear()\n      .domain([\n        0,\n        d3.max(allPriceData, d => Math.max(d.open, d.high, d.low, d.close))\n      ])\n      .range([h, margin])\n\n    // create y axis labels and tick marks\n    const yLabels = y.ticks(8).map((d, i) =>\n      y(d) > 10 && y(d) < h ? (\n        <g key={i} transform={`translate(${margin}, ${y(d)})`}>\n          <text x=\"-18\" y=\"5\">\n            {d}\n          </text>\n          <line x1=\"0\" x2=\"3\" y1=\"0\" y2=\"0\" transform=\"translate(-3, 2)\" />\n          <line\n            className=\"graph-lines\"\n            x1=\"0\"\n            x2={w - margin + 4}\n            y1=\"0\"\n            y2=\"0\"\n            transform=\"translate(-3,2)\"\n          />\n        </g>\n      ) : null\n    )\n    const formatXLabels = x => new Date(x).getFullYear()\n    // create x axis labels and tick marks\n    const xLabels = x.ticks(10).map((d, i) =>\n      x(d) > margin && x(d) < w ? (\n        <g key={i} transform={`translate(${x(d)}, ${h + 20})`}>\n          <text>{formatXLabels(d)}</text>\n          <line x1=\"0\" x2=\"0\" y1=\"0\" y2=\"5\" transform=\"translate(0, -20)\" />\n        </g>\n      ) : null\n    )\n\n    return (\n      <>\n        <g css={axisLabels}>{yLabels}</g>\n        <g css={axisLabels}>{xLabels}</g>\n      </>\n    )\n  }\n}\n\nexport default StockLabels\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport PropTypes from 'prop-types'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nconst hoverHolder = css`\n  position: absolute;\n  padding: 13px;\n  background-color: #ef6e8d;\n  border-radius: 8px;\n  border: 1px solid white;\n  z-index: 999;\n  span {\n    font-size: 13px;\n    display: block;\n    text-align: left;\n    color: black;\n    &:first-of-type {\n      padding-bottom: 4px;\n    }\n  }\n`\n\nconst formatDate = d => {\n  let date = new Date(d)\n  return date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear()\n}\nconst formatValue = n => {\n  return parseFloat(n).toFixed(2)\n}\nconst Tooltip = ({ value, date, positionX, positionY, color }) => {\n  return (\n    <div\n      css={hoverHolder}\n      style={{ top: positionY, left: positionX, backgroundColor: color }}\n    >\n      <span>Amount: {formatValue(value)}</span>\n      <span>Date: {formatDate(date)}</span>\n    </div>\n  )\n}\n\nexport default Tooltip\n\nTooltip.propTypes = {\n  value: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  positionX: PropTypes.number.isRequired,\n  positionY: PropTypes.number.isRequired\n}\n","// eslint-disable-next-line no-unused-vars\nimport React, { PureComponent } from 'react'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport PriceDataLine from './PriceDataLine'\nimport StockLabels from './StockLabels'\nimport Tooltip from './Tooltip'\n\nconst axis = css`\n  stroke: #d6d6d8;\n`\nconst svgHolder = css`\n  svg {\n    margin: 0 auto;\n    max-width: 948px;\n  }\n  circle {\n    cursor: pointer;\n    z-index: 9;\n    opacity: 0;\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n`\n\nclass PriceGraph extends PureComponent {\n  constructor() {\n    super()\n    this.state = {\n      date: '',\n      value: null,\n      positionX: '',\n      positionY: '',\n      color: '',\n      width: 1000,\n      height: 600\n    }\n    this.setHover = this.setHover.bind(this)\n    this.clearHover = this.clearHover.bind(this)\n  }\n  setHover(e) {\n    this.setState({\n      value: e.target.getAttribute('data-value'),\n      date: e.target.getAttribute('data-date'),\n      positionX: e.pageX - 100,\n      positionY: e.pageY - 80,\n      color: e.target.getAttribute('data-color')\n    })\n  }\n  clearHover() {\n    this.setState({\n      transform: '',\n      value: '',\n      positionX: '',\n      positionY: '',\n      color: ''\n    })\n  }\n\n  formatAllData() {\n    const { prices, crypto } = this.props,\n      allPriceData = []\n\n    Object.keys(prices).forEach((price, index) => {\n      const timeStamp = new Date(price),\n        open = Object.keys(prices[price])[0],\n        high = Object.keys(prices[price])[crypto ? 2 : 1],\n        low = Object.keys(prices[price])[crypto ? 4 : 2],\n        close = Object.keys(prices[price])[crypto ? 6 : 3]\n\n      allPriceData.push({\n        date: timeStamp,\n        open: Number(prices[price][open]),\n        high: Number(prices[price][high]),\n        low: Number(prices[price][low]),\n        close: Number(prices[price][close])\n      })\n    })\n    return allPriceData\n  }\n\n  componentDidMount() {\n    this.formatAllData()\n  }\n\n  render() {\n    // set width, height and margin value\n    const { width, height } = this.props,\n      margin = 35\n\n    const h = height - 2 * margin,\n      w = width - 2 * margin\n\n    const { stockLines, crypto } = this.props,\n      { date, value, positionX, positionY, color } = this.state\n\n    return (\n      <div css={svgHolder}>\n        {this.state.value && (\n          <Tooltip\n            value={value}\n            date={date}\n            positionX={positionX}\n            positionY={positionY}\n            color={color}\n          />\n        )}\n        {this.props.prices.length !== 0 && (\n          <svg height={height} width={width}>\n            <g>\n              <line css={axis} x1={margin} x2={w} y1={h} y2={h} />\n              <line css={axis} x1={margin} x2={margin} y1={margin} y2={h} />\n\n              {stockLines.type.open && (\n                <PriceDataLine\n                  h={h}\n                  w={w}\n                  margin={margin}\n                  stroke=\"#95eaf1\"\n                  hover={true}\n                  lineType={'open'}\n                  setHover={this.setHover}\n                  clearHover={this.clearHover}\n                  allPriceData={this.formatAllData()}\n                  crypto={crypto}\n                />\n              )}\n              {stockLines.type.high && (\n                <PriceDataLine\n                  h={h}\n                  w={w}\n                  margin={margin}\n                  stroke=\"#ef6e8d\"\n                  hover={true}\n                  lineType={'high'}\n                  setHover={this.setHover}\n                  clearHover={this.clearHover}\n                  allPriceData={this.formatAllData()}\n                  crypto={crypto}\n                />\n              )}\n              {stockLines.type.low && (\n                <PriceDataLine\n                  h={h}\n                  w={w}\n                  margin={margin}\n                  stroke=\"#a8a8ff\"\n                  hover={true}\n                  lineType={'low'}\n                  setHover={this.setHover}\n                  clearHover={this.clearHover}\n                  allPriceData={this.formatAllData()}\n                  crypto={crypto}\n                />\n              )}\n              {stockLines.type.close && (\n                <PriceDataLine\n                  h={h}\n                  w={w}\n                  margin={margin}\n                  stroke=\"#ff3c3c\"\n                  hover={true}\n                  lineType={'close'}\n                  setHover={this.setHover}\n                  clearHover={this.clearHover}\n                  allPriceData={this.formatAllData()}\n                  crypto={crypto}\n                />\n              )}\n              <StockLabels\n                height={height}\n                width={width}\n                h={h}\n                w={w}\n                allPriceData={this.formatAllData()}\n                margin={margin}\n              />\n            </g>\n          </svg>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default PriceGraph\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport PropTypes from 'prop-types'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nconst txtColor = '#ffffff'\nconst beforeColor = '#ffffff'\nconst checkedBorderColor = '#a8a8ff'\n\nconst filterBoxes = css`\n  display: inline-block;\n  text-align: left;\n  margin-right: 15px;\n  &:first-of-type {\n    padding-bottom: 10px;\n  }\n  label {\n    cursor: pointer;\n    position: relative;\n    vertical-align: sub;\n    padding-top: 6px;\n    display: inline-block;\n    font-size: 15px;\n    color: ${txtColor};\n  }\n  input {\n    display: none;\n    visibility: hidden;\n    &:checked ~ .custom-radio:before {\n      background-color: ${beforeColor};\n    }\n    &:checked ~ .custom-radio {\n      border-color: ${checkedBorderColor};\n    }\n    &:checked ~ span {\n      color: ${checkedBorderColor};\n    }\n  }\n  .custom-radio {\n    border: 3px solid ${txtColor};\n    width: 9px;\n    height: 9px;\n    ${'' /* border-radius: 50%; */}\n    float: left;\n    position: relative;\n    transition: border 0.3s linear;\n    margin-top: 2px;\n\n    &:after {\n      content: '';\n      display: table;\n      clear: both;\n    }\n    &:before {\n      display: block;\n      position: absolute;\n      content: '';\n      border-radius: 50%;\n      height: 5px;\n      width: 5px;\n      top: 2px;\n      left: 2px;\n      transition: background 0.25s linear;\n    }\n  }\n  span {\n    padding-left: 5px;\n    display: inline-block;\n  }\n`\n\n// buttons for filtering between charts\nconst PriceLineFilter = ({ children, onChange, checked }) => {\n  // console.log(checked)\n  return (\n    <div css={filterBoxes}>\n      <label>\n        <input onChange={onChange} checked={checked} type=\"checkbox\" />\n        <span>{children}</span>\n        <div className=\"custom-radio\" />\n      </label>\n    </div>\n  )\n}\n\nexport default PriceLineFilter\n\nPriceLineFilter.propTypes = {\n  children: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired\n}\n","import { connect } from 'react-redux'\nimport PriceLineFilter from '../../components/stockGraph/PriceLineFilter'\nimport { setStockLines } from '../../actions/stockActions'\n\nconst mapStateToProps = (state, ownProps) => ({\n  checked: state.stockLines.type[ownProps.filter]\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onChange: () => dispatch(setStockLines(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PriceLineFilter)\n","export const customStyles = {\n  control: (base, state) => ({\n    ...base,\n    background: '#282c34',\n    borderRadius: state.isFocused ? '3px 3px 0 0' : 3,\n    boxSizing: 'border-box',\n    borderColor: state.isFocused ? '#95eaf1' : 'white',\n    boxShadow: state.isFocused ? null : null,\n    cursor: 'pointer',\n    '&:hover': {\n      borderColor: state.isFocused ? 'rgb(239, 110, 141)' : '#a8a8ff'\n    }\n  }),\n  dropdownIndicator: (base, state) => ({\n    ...base,\n    transition: 'all .2s ease',\n    color: state.selectProps.menuIsOpen ? '#95eaf1' : 'white',\n    '&:hover': {\n      color: state.isFocused ? 'rgb(239, 110, 141)' : '#a8a8ff'\n    }\n\n    // transform: state.isMenuOpen ? 'rotate(180deg)' : 'rotate(360deg)'\n  }),\n  menu: base => ({\n    ...base,\n    borderRadius: 0,\n    hyphens: 'auto',\n    marginTop: 0,\n    textAlign: 'center',\n    wordWrap: 'break-word'\n  }),\n  menuList: base => ({\n    ...base,\n    padding: 0,\n    background: '#282c34'\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    borderBottom: '1px dotted #95eaf1',\n    color: state.isSelected ? '#023950' : 'rgb(239, 110, 141)',\n    background: state.isSelected ? '#a8a8ff' : '#282c34',\n    opacity: state.isSelected ? 0.75 : 1,\n    padding: 15,\n    '&:hover': {\n      color: 'white'\n      // background: '#a8a8ff'\n    },\n    '&:focus': {\n      color: 'white'\n      // background: '#a8a8ff'\n    },\n    cursor: 'pointer',\n    ':active': {\n      backgroundColor: '#a8a8ff'\n    }\n  })\n}\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport Select from 'react-select'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { setStockSymbol } from '../../actions/stockActions'\nimport { customStyles } from '../../styles/customStyles'\n\nconst selectHolder = css`\n  width: 100%;\n  input {\n    color: #ef6e8d !important;\n  }\n`\n\nconst StockSymbolList = ({ stockSymbol, onChange, options, loading }) => {\n  return (\n    <div css={selectHolder}>\n      <Select\n        cacheOptions\n        classNamePrefix=\"select-input\"\n        defaultValue={stockSymbol}\n        onChange={opt => onChange(opt)}\n        options={options}\n        isSearchable\n        styles={customStyles}\n        ignoreAccents={false}\n        isLoading={loading}\n      />\n    </div>\n  )\n}\nconst mapStateToProps = state => ({\n  stockSymbol: state.stockSymbol,\n  loading: state.filterLoadingState\n})\nconst mapDispatchToProps = dispatch => ({\n  onChange: opt => dispatch(setStockSymbol(opt.value, opt.label))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StockSymbolList)\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport { connect } from 'react-redux'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { breakpoints } from '../../styles/breakpoints'\nimport { setListFilter } from '../../actions/stockActions'\nimport { setFilterLoadingState } from '../../actions'\n\nconst button = css`\n  border: none;\n  width: 50%;\n  line-height: 23px;\n  background-color: #95eaf1;\n  border: 1px solid #95eaf1;\n  color: #2c323b;\n  font-weight: 700;\n  display: inline-block;\n  cursor: pointer;\n  transition: all 0.4s ease-in-out;\n  letter-spacing: 0.5px;\n  @media ${breakpoints.mobile} {\n    line-height: 20px;\n  }\n  &:first-of-type {\n    margin-right: 5px;\n  }\n  &:hover {\n    background-color: #2c323b;\n    border: 1px solid #b1b3fc;\n    color: white;\n  }\n  &:focus {\n    border-color: #ef6e8d;\n    outline: none;\n  }\n  &.active {\n    background-color: #2c323b;\n    border: 1px solid #95eaf1;\n    color: white;\n    &:hover {\n      border-color: #ef6e8d;\n    }\n  }\n`\n\n// buttons for filtering between charts\nconst SymbolListFilter = ({ children, onClick, active }) => {\n  return (\n    <button css={button} onClick={onClick} className={active ? 'active' : ''}>\n      {children}\n    </button>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.listFilters\n})\nfunction dispatchAndChangeLoadingState(dispatch, filter) {\n  dispatch(setListFilter(filter))\n  dispatch(setFilterLoadingState())\n  setTimeout(() => {\n    dispatch(setFilterLoadingState())\n  }, 500)\n}\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatchAndChangeLoadingState(dispatch, ownProps.filter)\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SymbolListFilter)\n","// eslint-disable-next-line no-unused-vars\nimport React, { Component } from 'react'\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { breakpoints } from '../../styles/breakpoints'\n\nimport { StockLines, ListFilters, getPrices } from '../../actions/stockActions'\n\nimport Legend from './Legend'\nimport PriceGraph from './PriceGraph'\nimport LineFilter from '../../containers/stocks/LineFilter'\nimport StockSymbolList from './StockSymbolList'\nimport SymbolListFilter from './SymbolListFilter'\nimport loadingSpinner from '../../images/loading.svg'\nimport listOfStockSymbols from '../../data/stockSymbols.json'\nimport NASDAQStockSymbols from '../../data/NASDAQSymbols.json'\n\nconst stockHeader = css`\n  font-size: 72px;\n  color: #4d535e;\n  opacity: 0.3;\n  position: absolute;\n  top: 60%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0;\n  text-shadow: 0 1px 0 #e9e9ff;\n  @media ${breakpoints.mobile} {\n    font-size: 99px;\n    top: 50%;\n  }\n`\nconst flex = css`\n  display: flex;\n  justify-content: space-around;\n  max-width: 1178px;\n  margin: 0 auto;\n`\nconst metaText = css`\n  align-self: center;\n  p {\n    font-size: 14px;\n  }\n`\nconst lineFilters = css`\n  max-width: 900px;\n  text-align: left;\n  margin: 0 auto;\n  padding-left: 23px;\n`\nconst spinner = css`\n  margin-top: 100px;\n`\nconst fetchError = css`\n  max-width: 900px;\n  padding-top: 21%;\n  margin: 0 auto;\n`\nconst stockFilter = css`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 10px;\n`\nconst loadingHolder = css`\n  width: 100%;\n  height: 100%;\n`\nconst buttonFlex = css`\n  display: flex;\n  flex-direction: column-reverse;\n  width: 85%;\n  max-width: 440px;\n  @media ${breakpoints.mobile} {\n    flex-direction: row;\n    justify-content: center;\n  }\n`\nconst margin = css`\n  margin-left: 0;\n  margin-bottom: 10px;\n\n  @media ${breakpoints.mobile} {\n    margin-left: 5px;\n    margin-bottom: 0;\n    width: 100%;\n  }\n`\nconst button = css`\n  background-color: #a2edf2;\n  text-transform: uppercase;\n  font-weight: 700;\n  letter-spacing: 0.5px;\n  border: none;\n  padding: 0;\n  color: #2c323b;\n  padding: 0 12px;\n  cursor: pointer;\n  border: 1px solid #a2edf2;\n  display: inline-block;\n  transition: all 0.4s ease-in-out;\n  line-height: 25px;\n  @media ${breakpoints.mobile} {\n    line-height: 100%;\n  }\n  &:hover {\n    background-color: #2c323b;\n    border-color: #b1b3fc;\n    color: white;\n  }\n  &:focus {\n    border-color: #ef6e8d;\n    outline: none;\n  }\n`\nclass Stocks extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      width: 1000,\n      height: 600\n    }\n    this.updateGraphSize = this.updateGraphSize.bind(this)\n  }\n\n  updateGraphSize() {\n    const windowWidth = window.innerWidth,\n      newWidth = window.innerWidth - 35\n\n    if (windowWidth >= 970) {\n      this.setState({\n        width: 1000,\n        height: 600\n      })\n    } else if (windowWidth < 970 && windowWidth > 500) {\n      const newHeight = Math.round(newWidth / 1.3)\n      this.setState({\n        width: window.innerWidth - 35,\n        height: newHeight\n      })\n    } else {\n      this.setState({\n        width: 430,\n        height: 375\n      })\n    }\n  }\n  componentDidMount() {\n    const { error } = this.props\n    if (!error) {\n      this.updateGraphSize()\n      window.addEventListener('resize', this.updateGraphSize, false)\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateGraphSize, false)\n  }\n  render() {\n    const {\n      loading,\n      prices,\n      error,\n      meta,\n      stockLines,\n      listFilters,\n      stockSymbol,\n      dispatch\n    } = this.props\n\n    const { height, width } = this.state\n\n    if (loading) {\n      return (\n        <div css={loadingHolder}>\n          <img css={spinner} alt=\"Loading...\" src={loadingSpinner} />\n        </div>\n      )\n    }\n\n    return (\n      <>\n        <div css={flex}>\n          <div css={buttonFlex}>\n            <button\n              onClick={() => {\n                if (!error && stockSymbol.value) {\n                  dispatch(getPrices(stockSymbol.value, 'TIME_SERIES_MONTHLY'))\n                }\n              }}\n              css={button}\n            >\n              search\n            </button>\n            <div css={margin}>\n              <div css={stockFilter}>\n                <SymbolListFilter filter={ListFilters.SHOW_NASDAQ}>\n                  NASDAQ\n                </SymbolListFilter>\n                <SymbolListFilter filter={ListFilters.SHOW_NYSE}>\n                  NYSE\n                </SymbolListFilter>\n              </div>\n              {listFilters === 'SHOW_NYSE' && (\n                <StockSymbolList options={listOfStockSymbols} />\n              )}\n              {listFilters === 'SHOW_NASDAQ' && (\n                <StockSymbolList options={NASDAQStockSymbols} />\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div css={metaText}>\n          {!error && meta && <p>Last updated: {meta['3. Last Refreshed']}</p>}\n        </div>\n\n        {error && <div css={fetchError}>Error : {error}</div>}\n\n        {!error && prices.length !== 0 && (\n          <>\n            <div css={lineFilters}>\n              <Legend stocklines={stockLines} />\n              <LineFilter filter={StockLines.HIGH}>high</LineFilter>\n              <LineFilter filter={StockLines.LOW}>low</LineFilter>\n              <LineFilter filter={StockLines.OPEN}>open</LineFilter>\n              <LineFilter filter={StockLines.CLOSE}>close</LineFilter>\n            </div>\n            <PriceGraph\n              height={height}\n              width={width}\n              stockLines={stockLines}\n              prices={prices}\n              crypto={false}\n            />\n          </>\n        )}\n\n        {!error && prices.length === 0 && <h1 css={stockHeader}>STOCKS</h1>}\n      </>\n    )\n  }\n}\n\nexport default Stocks\n","import { connect } from 'react-redux'\nimport Stocks from '../../components/stockGraph/Stocks'\n\nconst mapStateToProps = state => ({\n  prices: state.stocks.prices,\n  loading: state.stocks.loading,\n  error: state.stocks.error,\n  meta: state.stocks.meta,\n  stockLines: state.stockLines,\n  listFilters: state.listFilters,\n  stockSymbol: state.stockSymbol\n})\n\nexport default connect(mapStateToProps)(Stocks)\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport PropTypes from 'prop-types'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { breakpoints } from '../styles/breakpoints'\n\nconst txtColor = '#ffffff'\nconst beforeColor = '#ffffff'\nconst checkedBorderColor = '#a8a8ff'\n\nconst filterBoxes = css`\n  display: block;\n  text-align: left;\n  &:first-of-type {\n    padding-bottom: 10px;\n  }\n  label {\n    cursor: pointer;\n    position: relative;\n    vertical-align: sub;\n    padding-top: 6px;\n    display: inline-block;\n    font-size: 17px;\n    color: ${txtColor};\n    @media ${breakpoints.mobile} {\n      font-size: 19px;\n    }\n  }\n  input {\n    display: none;\n    visibility: hidden;\n    &:checked ~ .custom-radio:before {\n      background-color: ${beforeColor};\n    }\n    &:checked ~ .custom-radio {\n      border-color: ${checkedBorderColor};\n    }\n    &:checked ~ span {\n      color: ${checkedBorderColor};\n    }\n  }\n  .custom-radio {\n    border: 5px solid ${txtColor};\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    float: left;\n    position: relative;\n    transition: border 0.3s linear;\n    @media ${breakpoints.mobile} {\n      width: 23px;\n      height: 23px;\n    }\n    &:after {\n      content: '';\n      display: table;\n      clear: both;\n    }\n    &:before {\n      display: block;\n      position: absolute;\n      content: '';\n      border-radius: 50%;\n      height: 12px;\n      width: 12px;\n      top: 4px;\n      left: 4px;\n      transition: background 0.25s linear;\n      @media ${breakpoints.mobile} {\n        height: 13px;\n        width: 13px;\n        top: 5px;\n        left: 5px;\n      }\n    }\n  }\n  span {\n    padding-left: 10px;\n    display: inline-block;\n    vertical-align: middle;\n    padding-top: 6px;\n  }\n`\n\n// buttons for filtering between charts\nconst Filter = ({ children, onChange, active }) => {\n  return (\n    <div css={filterBoxes}>\n      <label>\n        <input onChange={onChange} checked={active} type=\"radio\" />\n        <span>{children}</span>\n        <div className=\"custom-radio\" />\n      </label>\n    </div>\n  )\n}\n\nexport default Filter\n\nFilter.propTypes = {\n  children: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  active: PropTypes.bool.isRequired\n}\n","import { connect } from 'react-redux'\nimport Filter from '../components/Filter'\nimport { setChartFilter } from '../actions'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.chartFilters\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onChange: () => dispatch(setChartFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Filter)\n","/* \n\tfunction which fetches the stock data from the api\n*/\n\nexport function getCrypto(symbol, type, market) {\n  const key = process.env.REACT_APP_API_KEY,\n    url = `https://www.alphavantage.co/query?function=${type}&symbol=${symbol}&market=${market}&apikey=${key}`\n  return dispatch => {\n    dispatch(getCryptoBegin())\n    return fetch(url)\n      .then(handleFetchErrors)\n      .then(response => response.json())\n      .then(json => {\n        // console.log(json)\n        if (!json[Object.keys(json)[1]]) {\n          dispatch(getCryptoFailure(json[Object.keys(json)[0]]))\n        }\n        dispatch(\n          getCryptoSuccess(\n            json[Object.keys(json)[1]],\n            json[Object.keys(json)[0]]\n          )\n        )\n        return json\n      })\n      .catch(error => dispatch(getCryptoFailure(error)))\n  }\n}\n\n// function to handle http errors\nfunction handleFetchErrors(response) {\n  // console.log(response)\n  if (!response.ok) {\n    throw Error(response.statusText)\n  }\n  return response\n}\n\n/*\n\tcreating action types for:\n\t  - starting the request\n\t\t- when the request is successful\n\t\t- if the request fails\n*/\n\nexport const GET_CRYPTO_BEGIN = 'GET_CRYPTO_BEGIN'\nexport const GET_CRYPTO_SUCCESS = 'GET_CRYPTO_SUCCESS'\nexport const GET_CRYPTO_FAILURE = 'GET_CRYPTO_FAILURE'\n\nexport const getCryptoBegin = () => ({\n  type: GET_CRYPTO_BEGIN\n})\n\nexport const getCryptoSuccess = (crypto, meta) => ({\n  type: GET_CRYPTO_SUCCESS,\n  payload: { crypto, meta }\n})\n\nexport const getCryptoFailure = error => ({\n  type: GET_CRYPTO_FAILURE,\n  payload: { error }\n})\n\n// setting which pice line to show on crypto chart\nexport const setCryptoLines = filter => ({\n  type: 'SET_CRYPTO_LINE',\n  filter\n})\n\n// action types for filtering between stock price lines\nexport const CryptoLines = {\n  OPEN: 'open',\n  HIGH: 'high',\n  LOW: 'low',\n  CLOSE: 'close'\n}\n\n// action type for setting that stock symbol that will be used in search\nexport const setCryptoCoin = (coin, label) => ({\n  type: 'SET_CRYPTO_COIN',\n  coin,\n  label\n})\n\n// object to hold crypto types, monthly / daily\nexport const TypeFilters = {\n  MONTHLY: 'MONTHLY',\n  DAILY: 'DAILY'\n}\n\n// setting crypto type monthly / daily\nexport const setCryptoType = timePeriod => ({\n  type: 'SET_CRYPTO_TYPE',\n  timePeriod\n})\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport PropTypes from 'prop-types'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nconst txtColor = '#ffffff'\nconst beforeColor = '#ffffff'\nconst checkedBorderColor = '#a8a8ff'\n\nconst filterBoxes = css`\n  display: inline-block;\n  text-align: left;\n  margin-right: 15px;\n  &:first-of-type {\n    padding-bottom: 10px;\n  }\n  label {\n    cursor: pointer;\n    position: relative;\n    vertical-align: sub;\n    padding-top: 6px;\n    display: inline-block;\n    font-size: 15px;\n    color: ${txtColor};\n  }\n  input {\n    display: none;\n    visibility: hidden;\n    &:checked ~ .custom-radio:before {\n      background-color: ${beforeColor};\n    }\n    &:checked ~ .custom-radio {\n      border-color: ${checkedBorderColor};\n    }\n    &:checked ~ span {\n      color: ${checkedBorderColor};\n    }\n  }\n  .custom-radio {\n    border: 3px solid ${txtColor};\n    width: 9px;\n    height: 9px;\n    ${'' /* border-radius: 50%; */}\n    float: left;\n    position: relative;\n    transition: border 0.3s linear;\n    margin-top: 2px;\n\n    &:after {\n      content: '';\n      display: table;\n      clear: both;\n    }\n    &:before {\n      display: block;\n      position: absolute;\n      content: '';\n      border-radius: 50%;\n      height: 5px;\n      width: 5px;\n      top: 2px;\n      left: 2px;\n      transition: background 0.25s linear;\n    }\n  }\n  span {\n    padding-left: 5px;\n    display: inline-block;\n  }\n`\n// buttons for filtering between charts\nconst CryptoLineFilter = ({ children, onChange, checked }) => {\n  return (\n    <div css={filterBoxes}>\n      <label>\n        <input onChange={onChange} checked={checked} type=\"checkbox\" />\n        <span>{children}</span>\n        <div className=\"custom-radio\" />\n      </label>\n    </div>\n  )\n}\n\nexport default CryptoLineFilter\n\nCryptoLineFilter.propTypes = {\n  children: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired\n}\n","import { connect } from 'react-redux'\nimport CryptoLineFilter from '../../components/cryptoGraphs/CryptoLineFilter'\nimport { setCryptoLines } from '../../actions/cryptoActions'\n\nconst mapStateToProps = (state, ownProps) => ({\n  checked: state.cryptoLines.type[ownProps.filter]\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onChange: () => dispatch(setCryptoLines(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CryptoLineFilter)\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport Select from 'react-select'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { setCryptoCoin } from '../../actions/cryptoActions'\nimport { customStyles } from '../../styles/customStyles'\nimport coinTypes from '../../data/coinTypes.json'\n\nconst selectHolder = css`\n  width: 100%;\n  input {\n    color: #ef6e8d !important;\n  }\n`\n\nconst CryptoList = ({ cryotoCoin, onChange }) => {\n  return (\n    <div css={selectHolder}>\n      <Select\n        classNamePrefix=\"select-input\"\n        defaultValue={cryotoCoin}\n        onChange={opt => onChange(opt)}\n        options={coinTypes}\n        isSearchable\n        styles={customStyles}\n      />\n    </div>\n  )\n}\nconst mapStateToProps = state => ({\n  cryotoCoin: state.cryptoCoin\n})\nconst mapDispatchToProps = dispatch => ({\n  onChange: opt => dispatch(setCryptoCoin(opt.value, opt.label))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CryptoList)\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { setCryptoType } from '../../actions/cryptoActions'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { breakpoints } from '../../styles/breakpoints'\n\nconst button = css`\n  border: none;\n  width: 50%;\n  line-height: 23px;\n  background-color: #95eaf1;\n  border: 1px solid #95eaf1;\n  color: #2c323b;\n  font-weight: 700;\n  display: inline-block;\n  cursor: pointer;\n  transition: all 0.4s ease-in-out;\n  letter-spacing: 0.5px;\n  @media ${breakpoints.mobile} {\n    line-height: 20px;\n  }\n  &:first-of-type {\n    margin-right: 5px;\n  }\n  &:hover {\n    background-color: #2c323b;\n    border: 1px solid #b1b3fc;\n    color: white;\n  }\n  &:focus {\n    border-color: #ef6e8d;\n    outline: none;\n  }\n  &.active {\n    background-color: #2c323b;\n    border: 1px solid #95eaf1;\n    color: white;\n    &:hover {\n      border-color: #ef6e8d;\n    }\n  }\n`\nconst CryptoTypeFilter = ({ children, active, onClick }) => {\n  return (\n    <button css={button} onClick={onClick} className={active ? 'active' : ''}>\n      {children}\n    </button>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.timePeriod === state.cryptoType\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setCryptoType(ownProps.timePeriod))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CryptoTypeFilter)\n","// eslint-disable-next-line no-unused-vars\nimport React, { Component } from 'react'\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport { breakpoints } from '../../styles/breakpoints'\n\nimport {\n  getCrypto,\n  CryptoLines,\n  TypeFilters\n} from '../../actions/cryptoActions'\n\nimport PriceGraph from '../stockGraph/PriceGraph'\nimport CryptoFilter from '../../containers/cryptoCurrency/CryptoFilter'\nimport Legend from '../stockGraph/Legend'\nimport CryptoList from './CryptoList'\nimport loadingSpinner from '../../images/loading.svg'\nimport CryptoTypeFilter from './CryptoTypeFilter'\n\nconst stockHeader = css`\n  font-size: 72px;\n  color: #4d535e;\n  opacity: 0.3;\n  position: absolute;\n  top: 60%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0;\n  text-shadow: 0 1px 0 #e9e9ff;\n  @media ${breakpoints.mobile} {\n    font-size: 99px;\n    top: 50%;\n  }\n`\nconst flex = css`\n  display: flex;\n  justify-content: space-around;\n  max-width: 1178px;\n  margin: 0 auto;\n`\n\nconst metaText = css`\n  align-self: center;\n  p {\n    font-size: 14px;\n  }\n`\nconst lineFilters = css`\n  max-width: 900px;\n  text-align: left;\n  margin: 0 auto;\n  padding-left: 23px;\n`\nconst spinner = css`\n  margin-top: 100px;\n`\nconst fetchError = css`\n  max-width: 900px;\n  padding-top: 21%;\n  margin: 0 auto;\n`\nconst loadingHolder = css`\n  width: 100%;\n  height: 100%;\n`\nconst buttonFlex = css`\n  display: flex;\n  flex-direction: column-reverse;\n  width: 85%;\n  max-width: 440px;\n  @media ${breakpoints.mobile} {\n    flex-direction: row;\n    justify-content: center;\n  }\n`\nconst button = css`\n  background-color: #a2edf2;\n  text-transform: uppercase;\n  font-weight: 700;\n  letter-spacing: 0.5px;\n  border: none;\n  padding: 0;\n  color: #2c323b;\n  padding: 0 12px;\n  cursor: pointer;\n  border: 1px solid #a2edf2;\n  display: inline-block;\n  transition: all 0.4s ease-in-out;\n  line-height: 25px;\n  @media ${breakpoints.mobile} {\n    line-height: 100%;\n  }\n  &:hover {\n    background-color: #2c323b;\n    border-color: #b1b3fc;\n    color: white;\n  }\n  &:focus {\n    border-color: #ef6e8d;\n    outline: none;\n  }\n`\nconst margin = css`\n  margin-left: 0;\n  margin-bottom: 10px;\n\n  @media ${breakpoints.mobile} {\n    margin-left: 5px;\n    margin-bottom: 0;\n    width: 100%;\n  }\n`\nconst cryptoFilter = css`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 10px;\n`\n\nclass Crypto extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      width: 1000,\n      height: 600\n    }\n    this.updateGraphSize = this.updateGraphSize.bind(this)\n  }\n  updateGraphSize() {\n    const windowWidth = window.innerWidth,\n      newWidth = window.innerWidth - 35\n\n    if (windowWidth >= 970) {\n      this.setState({ width: 1000, height: 600 })\n    } else if (windowWidth < 970 && windowWidth > 500) {\n      const newHeight = Math.round(newWidth / 1.3)\n      this.setState({ width: window.innerWidth - 35, height: newHeight })\n    } else {\n      this.setState({\n        width: 430,\n        height: 375\n      })\n    }\n  }\n  componentDidMount() {\n    const { error } = this.props\n    if (!error) {\n      this.updateGraphSize()\n      window.addEventListener('resize', this.updateGraphSize, false)\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateGraphSize, false)\n  }\n  render() {\n    const {\n      loading,\n      cryptoPrices,\n      error,\n      meta,\n      cryptoLines,\n      cryptoCoin,\n      cryptoType,\n      dispatch\n    } = this.props\n\n    const { height, width } = this.state\n\n    if (loading) {\n      return (\n        <div css={loadingHolder}>\n          <img css={spinner} alt=\"Loading...\" src={loadingSpinner} />\n        </div>\n      )\n    }\n\n    return (\n      <>\n        <div css={flex}>\n          <div css={buttonFlex}>\n            <button\n              onClick={() => {\n                if (!error && cryptoCoin.value) {\n                  dispatch(\n                    getCrypto(\n                      cryptoCoin.value,\n                      `DIGITAL_CURRENCY_${cryptoType}`,\n                      'USD'\n                    )\n                  )\n                }\n              }}\n              css={button}\n            >\n              search\n            </button>\n            <div css={margin}>\n              <div css={cryptoFilter}>\n                <CryptoTypeFilter timePeriod={TypeFilters.MONTHLY}>\n                  MONTHLY\n                </CryptoTypeFilter>\n                <CryptoTypeFilter timePeriod={TypeFilters.DAILY}>\n                  DAILY\n                </CryptoTypeFilter>\n              </div>\n              <CryptoList />\n            </div>\n          </div>\n        </div>\n\n        <div css={metaText}>\n          {!error && meta && <p>Last updated: {meta['6. Last Refreshed']}</p>}\n        </div>\n\n        {error && <div css={fetchError}>Error : {error}</div>}\n\n        {!error && cryptoPrices.length !== 0 && (\n          <>\n            <div css={lineFilters}>\n              <Legend stocklines={cryptoLines} />\n              <CryptoFilter filter={CryptoLines.HIGH}>high</CryptoFilter>\n              <CryptoFilter filter={CryptoLines.LOW}>low</CryptoFilter>\n              <CryptoFilter filter={CryptoLines.OPEN}>open</CryptoFilter>\n              <CryptoFilter filter={CryptoLines.CLOSE}>close</CryptoFilter>\n            </div>\n            <PriceGraph\n              height={height}\n              width={width}\n              crypto={true}\n              stockLines={cryptoLines}\n              prices={cryptoPrices}\n            />\n          </>\n        )}\n        {!error && cryptoPrices.length === 0 && (\n          <h1 css={stockHeader}>CRYPTO</h1>\n        )}\n      </>\n    )\n  }\n}\n\nexport default Crypto\n// const mapStateToProps = state => ({\n//   cryptoCoin: state.cryptoCoin,\n//   cryptoType: state.cryptoType\n// })\n// export default connect(mapStateToProps)(Crypto)\n","import { connect } from 'react-redux'\nimport Crypto from '../../components/cryptoGraphs/Crypto'\n\nconst mapStateToProps = state => ({\n  cryptoPrices: state.crypto.prices,\n  loading: state.crypto.loading,\n  error: state.crypto.error,\n  meta: state.crypto.meta,\n  cryptoLines: state.cryptoLines,\n  cryptoCoin: state.cryptoCoin,\n  cryptoType: state.cryptoType\n})\n\nexport default connect(mapStateToProps)(Crypto)\n","// eslint-disable-next-line no-unused-vars\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport './App.scss'\nimport { ChartFilters } from '../actions'\nimport StocksContainer from '../containers/stocks/StocksContainer'\nimport FilterCharts from '../containers/FilterCharts'\nimport CryptoContainer from '../containers/cryptoCurrency/CryptoContainer'\n\nconst chartFilters = css`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n  width: 90%;\n  max-width: 540px;\n  margin: 0 auto;\n  padding: 15px 0;\n`\nconst title = css`\n  color: #ffffff;\n  font-size: 30px;\n  margin-bottom: 10px;\n  padding-top: 10px;\n`\n\n/*\n\tcomponent for showing charts and filters for switching between charts\n*/\nconst Charts = ({ chartsToShow }) => {\n  return (\n    <div className=\"App\">\n      <h1 css={title}>Data Playground</h1>\n      <div className=\"charts\">\n        <div css={chartFilters}>\n          <FilterCharts filter={ChartFilters.SHOW_STOCK_PRICES}>\n            Stock Prices\n          </FilterCharts>\n          <FilterCharts filter={ChartFilters.SHOW_CRYPTO_PRICES}>\n            CryptoCurrency\n          </FilterCharts>\n        </div>\n        {chartsToShow === 'SHOW_STOCK_PRICES' && (\n          <>\n            <StocksContainer />\n          </>\n        )}\n        {chartsToShow === 'SHOW_CRYPTO_PRICES' && (\n          <>\n            <CryptoContainer />\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  chartsToShow: state.chartFilters\n})\n\nconst ChartsContainer = connect(mapStateToProps)(Charts)\n\nexport default ChartsContainer\n\nCharts.propTypes = {\n  chartsToShow: PropTypes.string.isRequired\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { ChartFilters } from '../actions'\n\nconst chartFilters = (state = ChartFilters.SHOW_STOCK_PRICES, action) => {\n  switch (action.type) {\n    case 'SET_CHART_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default chartFilters\n","import {\n  GET_PRICES_BEGIN,\n  GET_PRICES_SUCCESS,\n  GET_PRICES_FAILURE\n} from '../actions/stockActions'\n\nconst initialState = {\n  prices: [],\n  loading: false,\n  error: null\n}\n\nfunction stocksReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_PRICES_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      }\n    case GET_PRICES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        prices: action.payload.prices,\n        meta: action.payload.meta\n      }\n    case GET_PRICES_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        prices: [],\n        meta: []\n      }\n    default:\n      return state\n  }\n}\nexport default stocksReducer\n","const initialState = {\n  type: {\n    high: true,\n    low: false,\n    open: false,\n    close: false\n  }\n}\nconst stockLines = (state = initialState, action) => {\n  // console.log(action)\n  switch (action.type) {\n    case 'SET_PRICE_LINE':\n      // console.log(state)\n      return {\n        ...state,\n        type: {\n          ...state.type,\n          [action.filter]: !state.type[action.filter]\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default stockLines\n","import {\n  GET_CRYPTO_BEGIN,\n  GET_CRYPTO_SUCCESS,\n  GET_CRYPTO_FAILURE\n} from '../actions/cryptoActions'\n\nconst initialState = {\n  prices: [],\n  loading: false,\n  error: null\n}\n\nfunction stocksReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_CRYPTO_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      }\n    case GET_CRYPTO_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        prices: action.payload.crypto,\n        meta: action.payload.meta\n      }\n    case GET_CRYPTO_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        prices: [],\n        meta: []\n      }\n    default:\n      return state\n  }\n}\nexport default stocksReducer\n","const initialState = {\n  type: {\n    high: true,\n    low: false,\n    open: false,\n    close: false\n  }\n}\nconst cryptoLines = (state = initialState, action) => {\n  // console.log(action)\n  switch (action.type) {\n    case 'SET_CRYPTO_LINE':\n      // console.log(state)\n      return {\n        ...state,\n        type: {\n          ...state.type,\n          [action.filter]: !state.type[action.filter]\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default cryptoLines\n","const initialState = {\n  label: 'Select from list or type to search...',\n  value: 0\n}\n\nconst stockSymbol = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_STOCK_SYMBOL':\n      return {\n        label: action.label,\n        value: action.symbol\n      }\n    default:\n      return state\n  }\n}\n\nexport default stockSymbol\n","const initialState = {\n  label: 'Select from list or type to search...',\n  value: 0\n}\n\nconst cryptoCoin = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_CRYPTO_COIN':\n      return {\n        label: action.label,\n        value: action.coin\n      }\n    default:\n      return state\n  }\n}\n\nexport default cryptoCoin\n","import { ListFilters } from '../actions/stockActions'\n\nconst listFilters = (state = ListFilters.SHOW_NASDAQ, action) => {\n  switch (action.type) {\n    case 'SET_LIST_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default listFilters\n","import { TypeFilters } from '../actions/cryptoActions'\n\nconst cryptoType = (state = TypeFilters.MONTHLY, action) => {\n  switch (action.type) {\n    case 'SET_CRYPTO_TYPE':\n      return action.timePeriod\n    default:\n      return state\n  }\n}\n\nexport default cryptoType\n","const filterLoadingState = (state = false, action) => {\n  switch (action.type) {\n    case 'SET_FILTER_LOADING_STATE':\n      return !state\n    default:\n      return state\n  }\n}\n\nexport default filterLoadingState\n","import { combineReducers } from 'redux'\nimport chartFilters from './chartFilters'\nimport stocks from './stocksReducer'\nimport stockLines from './stockLines'\nimport crypto from './cryptoReducer'\nimport cryptoLines from './cryptoLines'\nimport stockSymbol from './stockSymbol'\nimport cryptoCoin from './cryptoCoin'\nimport listFilters from './listFilters'\nimport cryptoType from './cryptoType'\nimport filterLoadingState from './filterLoadingState'\n\nexport default combineReducers({\n  chartFilters,\n  stocks,\n  stockLines,\n  crypto,\n  cryptoLines,\n  stockSymbol,\n  cryptoCoin,\n  listFilters,\n  cryptoType,\n  filterLoadingState\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport './index.css'\nimport ChartsContainer from './components/Charts'\nimport * as serviceWorker from './serviceWorker'\nimport rootReducer from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nrender(\n  <Provider store={store}>\n    <ChartsContainer />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}